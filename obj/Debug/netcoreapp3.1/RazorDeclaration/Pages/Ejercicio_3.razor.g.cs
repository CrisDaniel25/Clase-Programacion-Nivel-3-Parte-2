#pragma checksum "C:\Users\crist\Desktop\Programacion III\Tarea_2\Pages\Ejercicio_3.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "899f262ccf706e7dad5ba97d314c9f616dd43aa3"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Tarea_2.Pages
{
    #line hidden
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\crist\Desktop\Programacion III\Tarea_2\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\crist\Desktop\Programacion III\Tarea_2\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\crist\Desktop\Programacion III\Tarea_2\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\crist\Desktop\Programacion III\Tarea_2\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\crist\Desktop\Programacion III\Tarea_2\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\crist\Desktop\Programacion III\Tarea_2\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\crist\Desktop\Programacion III\Tarea_2\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\crist\Desktop\Programacion III\Tarea_2\_Imports.razor"
using Tarea_2;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\crist\Desktop\Programacion III\Tarea_2\_Imports.razor"
using Tarea_2.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\crist\Desktop\Programacion III\Tarea_2\Pages\Ejercicio_3.razor"
using System;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/Ejercicio-3")]
    public partial class Ejercicio_3 : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 26 "C:\Users\crist\Desktop\Programacion III\Tarea_2\Pages\Ejercicio_3.razor"
        
    public string cedula {get; set;}
    public string result {get; set;}

    public void Verified() 
    {
        result = Validation(cedula);
    }

    public string Validation(string cedula)
    {
        int[] digitos = new int[11];
        const int x1 = 1, x2 = 2;
        int digitoMultiplicado = 0, Result = 0;
        int comparacion = 0;
        var res = "";

        try
        {            
            if(cedula.Length == 11)
            {
                for (int index = 0; index < 11; index++)
                {
                    digitos[index] = Convert.ToInt32(cedula.Substring(index, 1));
                }

                for (int index = 9; index >= 0; index--)
                {
                    if (index % 2 == 0)
                    {
                        digitoMultiplicado = digitos[index] * x1;
                        if (digitoMultiplicado < 10)
                        {
                            Result = Result + digitoMultiplicado;
                        }
                        else
                        {
                            for (int index_ = 0; index_ < 2; index_++)
                            {
                                var cut = Convert.ToString(digitoMultiplicado);
                                Result = Result + Convert.ToInt32(cut.Substring(index_, 1));
                            }
                        }                       
                    }
                    else
                    {
                        digitoMultiplicado = digitos[index] * x2;
                        if (digitoMultiplicado < 10)
                        {
                            Result = Result + digitoMultiplicado;
                        }
                        else
                        {
                            for (int index_ = 0; index_ < 2; index_++)
                            {
                                var cut = Convert.ToString(digitoMultiplicado);
                                Result = Result + Convert.ToInt32(cut.Substring(index_, 1));
                            }
                        } 
                    }
                }

                if(Result >= 0 && Result <= 9)
                {
                    comparacion = 10 - Result;
                    res = Comparation(digitos[10], comparacion);
                }
                else if(Result >= 10 && Result <= 19)
                {
                    comparacion = 20 - Result;
                    res = Comparation(digitos[10], comparacion);
                }
                else if(Result >= 20 && Result <= 29)
                {
                    comparacion = 30 - Result;
                    res = Comparation(digitos[10], comparacion);
                }
                else if(Result >= 30 && Result <= 39)
                {
                    comparacion = 40 - Result;
                    res = Comparation(digitos[10], comparacion);
                }
                else if(Result >= 40 && Result <= 49)
                {
                    comparacion = 50 - Result;
                    Console.WriteLine(digitos[10] + " " + Result + " " + comparacion);
                    res = Comparation(digitos[10], comparacion);
                }
                else if(Result >= 50 && Result <= 59)
                {
                    comparacion = 60 - Result;
                    res = Comparation(digitos[10], comparacion);
                }
                else if(Result >= 60 && Result <= 69)
                {
                    comparacion = 70 - Result;
                    res = Comparation(digitos[10], comparacion);
                }
                else if(Result >= 70 && Result <= 79)
                {
                    comparacion = 80 - Result;
                    res = Comparation(digitos[10], comparacion);
                }
                else if(Result >= 80 && Result <= 89)
                {
                    comparacion = 90 - Result;
                    res = Comparation(digitos[10], comparacion);
                }
                else if(Result >= 90 && Result <= 99)
                {
                    comparacion = 100 - Result;
                    res = Comparation(digitos[10], comparacion);
                }
                
            }
            else 
            {
                res = "Le falta el digitos para ser una cédula dominicana";
            }
        }
        catch (System.Exception)
        {            
            res = "No se pudo validar de ninguna manera esta cédula";
        }

        return res;
    }

    public string Comparation(int digitoVerificador, int digitoComparativo)
    {
        var res = "";

        if(digitoVerificador == digitoComparativo)
        {
            res = "Es una cédula dominicana valida";
        }
        else
        {
            res = "No es una cédula dominicada valida";
        }
        return res;
    }

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
